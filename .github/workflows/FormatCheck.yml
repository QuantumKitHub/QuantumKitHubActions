name: "Reusable Format Checking Workflow"

on:
  workflow_call:
    inputs:
      julia-version:
        description: "Julia version"
        default: "1"
        required: false
        type: string
      runic-version:
        description: "Version of Runic to use"
        default: "1"
        required: false
        type: string
      concurrent-jobs:
        description: "Run jobs concurrently"
        default: false
        required: false
        type: boolean
      cancel-in-progress:
        description: "Cancel jobs in-progress in favor of a new one in the same concurrency group"
        default: true
        required: false
        type: boolean
      format-suggestions:
        description: "Post formatting changes as code suggestions"
        default: true
        required: false
        type: boolean

concurrency:
  group: "${{ inputs.concurrent-jobs && github.run_id || github.ref  }}:${{ github.workflow }}"
  cancel-in-progress: ${{ !inputs.concurrent-jobs && inputs.cancel-in-progress }}

jobs:
  format-check:
    name: "Check Formatting"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: "${{ inputs.julia-version }}"
      - uses: julia-actions/cache@v2

      - uses: fredrikekre/runic-action@v1
        with:
          version: "${{ inputs.runic-version }}"
          format_files: ${{ inputs.format_suggestions }}
        continue-on-error : ${{ github.event_name == 'pull_request' && inputs.format_suggestions }}

      - uses: reviewdog/action-suggester@v1
        if: ${{ github.event_name == 'pull_request' && inputs.format_suggestions }}
        with:
          tool_name: Runic
          fail_level: warning
